name: ci

on: push

jobs:
  linux-acr:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing radare2
      run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/install.sh )
    - name: Building r2ghidra with acr
      run: git submodule update --init ; ./configure ; make -j4 ; make user-install
    - name: Packaging r2ghidra for Debian
      run: make -C scripts/debian
    - name: Testing r2ghidra oneliner
      run: r2 -qc 'af;pdg' /bin/ls || exit 0
    - name: Testing r2ghidra
      run: make -C test || exit 0
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        # path: radare2/dist/debian/*/*.deb r2ghidra/scripts/debian/*.deb
        path: r2ghidra/scripts/debian/*.deb

  linux-asan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Installing radare2
    #  run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/sanitize.sh --install /usr )
      run: ( git clone --depth=1 https://github.com/radareorg/radare2 && cd radare2 && sys/install.sh --install )
    - name: Building r2ghidra with acr
      run: git submodule update --init ; ./configure ; make asan ; make -C src sleigh-build; make user-install
    - name: Testing r2ghidra oneliner
      run: r2 -qc 'af;pdg' /bin/ls || exit 0

  linux-cmake:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cloning Repo
      run: git clone --depth=1 https://github.com/radareorg/radare2
    - name: Packaging Radare2 for Debian
      # run: make -C radare2/dist/debian
      run: ( cd radare2 && sys/debian.sh )
    - name: Installing Radare2
      run: sudo dpkg -i radare2/dist/debian/*/*.deb
    - name: Building r2ghidra with cmake
      run: git submodule update --init ; mkdir build && cd build && cmake .. && make -j4 && sudo make install
    - name: Packaging r2ghidra for Debian
      run: make -C scripts/debian
    - name: Testing r2ghidra oneliner
      run: r2 -qc 'af;pdg' /bin/ls || exit 0
    #- name: Testing r2ghidra
    #  run: make -C test || exit 0
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        path: radare2/dist/debian/*/*.deb r2ghidra/scripts/debian/*.deb

  macos-acr:

    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cloning Repo
      run: git clone --depth=1 https://github.com/radareorg/radare2
    - name: Packaging Radare2 for macOS
      run: make -C radare2/dist/macos
    - name: Install radare2 Package
      run: sudo installer -pkg radare2/dist/macos/*.pkg -target /
    - name: Building r2ghidra
      run: git submodule update --init ; ./configure ; make -j4 ; make user-install
    - name: Building r2ghidra
      run: make install DESTDIR=/tmp/r2ghidra ; cd /tmp/r2ghidra ; tar czvf ../r2ghidra-macos.tar.gz *
    - name: Testing r2ghidra
      run: r2 -qc 'af;pdg' /bin/ls
    - name: Pub
      uses: actions/upload-artifact@v2
      with:
        path: radare2/dist/macos/*.pkg src/*.dylib /tmp/r2ghidra-macos.tar.gz
